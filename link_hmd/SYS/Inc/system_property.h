#ifndef __SYSTEM_PROPERTY_H__
#define __SYSTEM_PROPERTY_H__

typedef enum
{
	USB_PROPERTY_ACTION_GET = 0x00,
	USB_PROPERTY_ACTION_SET = 0x01,
} USB_PROPERTY_ACTION_typedef_t;

enum sys_prop_service_state {
	SYS_PROP_SERVICE_UNINITIALIZED = 0,
	SYS_PROP_SERVICE_RUNNING,
	SYS_PROP_SERVICE_SUSPEND,
};

typedef enum
{
	/********************* General Property  Begin*******************/
	PROP_TRACKING_SYSTEM_NAME_STRING = 0,
	PROP_MODEL_NUMBER_STRING,
	PROP_SERIAL_NUMBER_STRING,
	PROP_RENDER_MODEL_NAME_STRING,
	PROP_MANUFACTURER_NAME_STRING,
	PROP_TRACKING_FIRMWARE_VERSION_STRING,
	PROP_HARDWARE_REVISION_STRING,
	PROP_DEVICE_IS_WIRELESS_BOOL,
	PROP_DEVICE_IS_CHARGING_BOOL,
	PROP_DEVICE_BATTERY_PERCENTAGE_FLOAT,
	PROP_DEVICE_STATUS_DISPLAY_TRANSFORM_MATRIX34,
	PROP_FIRMWARE_UPDATE_AVAILABLE_BOOL,
	PROP_HARDWARE_REVISION_UINT64,
	PROP_FIRMWARE_VERSION_UINT64,
	PROP_CONTAINS_PROXIMITY_SENSOR_BOOL,
	PROP_PROVIDES_BATTERY_STATUS_BOOL,
	PROP_DEVICE_CAN_POWEROFF_BOOL,
	PROP_DEVICE_CLASS_INT32,
	PROP_HAS_CAMERA_BOOL,
	PROP_PROJECT_ID,
	PROP_ENGINEERING_ID_PARAM_TYPE_INT32,////20
	/*************** Tracking Device Class - HMD  **************/
	PROP_REPORTS_TIME_SINCE_VSYNC_BOOL = 50,
	PROP_SECONDS_FROM_VSYNC_TO_PHOTONS_FLOAT,
	PROP_DISPLAY_FREQUENCY_FLOAT,
	PROP_USER_IPD_METERS_FLOAT,
	PROP_CAMERA_TO_HEAD_TRANSFORM_MARTIX34,
	PROP_LENS_CENTER_LEFT_U_FLOAT,
	PROP_LENS_CENTER_LEFT_V_FLOAT,
	PROP_LENS_CENTER_RIGHT_U_FLOAT,
	PROP_LENS_CENTER_RIGHT_V_FLOAT,
	PROP_USER_HEAD_TO_EYE_DEPTH_METERS_FLOAT,
	PROP_SCREENSHOT_HORIZONTAL_FIELD_OF_VIEW_DEGREES_FLOAT,
	PROP_SCREENSHOT_VERTICAL_FIELD_OF_VIEW_DEGREES_FLOAT,
	PROP_CONTAIN_RECENTER_BOOL,
	PROP_CONTAINS6DOF_BOOL,
	PROP_TRACKING_MODEL_TYPE_INT32,
	/*************** Tracking Device Class - Controller  **************/   
	PROP_ATTACHED_DEVICE_ID_STRING = 80,
	PROP_SUPPORTED_BUTTONS_UINT64,
	PROP_AXIS0_TYPE_INT32,
	PROP_AXIS1_TYPE_INT32,
	PROP_AXIS2_TYPE_INT32,
	PROP_AXIS3_TYPE_INT32,
	PROP_AXIS4_TYPE_INT32,
	/*************** Vendor Specific Calss  **************/
	PROP_VENDOR_SPEC_RESERVED_START = 100,
	PROP_VENDOR_DISPALY_RENDER_OVER_FILL_FLOAT,
	PROP_VENDOR_DISPALY_IS_DISPLAY_ON_DEVICE_BOOL,
	PROP_VENDOR_DISPALY_SENSOR_TO_HEAD_VECTOR3,
	PROP_VENDOR_DISPALY_DISTORTION_DISTANCE_EYE_TO_LENS_FLOAT,
	PROP_VENDOR_DISPALY_DISTORTION_DISTANCE_LENS_TO_SCREEN_FLOAT,
	PROP_VENDOR_DISPALY_DISTORTION_LENS_FOCAL_LENGTH_FLOAT,
	PROP_VENDOR_DISPALY_DISTORTION_VENDOR_PART_NUMBER_STRING,
	PROP_VENDOR_DISPALY_DISTORTION_DISTANCE_SCALE_X_FLOAT,
	PROP_VENDOR_DISPALY_DISTORTION_DISTANCE_SCALE_Y_FLOAT,
	PROP_VENDOR_DISPALY_POLYNOMIAL_COEFF_RED_FLOAT_ARRAY_PART1,
	PROP_VENDOR_DISPALY_POLYNOMIAL_COEFF_RED_FLOAT_ARRAY_PART2,
	PROP_VENDOR_DISPALY_POLYNOMIAL_COEFF_GREEN_FLOAT_ARRAY_PART1,
	PROP_VENDOR_DISPALY_POLYNOMIAL_COEFF_GREEN_FLOAT_ARRAY_PART2,
	PROP_VENDOR_DISPALY_POLYNOMIAL_COEFF_BLUE_FLOAT_ARRAY_PART1,
	PROP_VENDOR_DISPALY_POLYNOMIAL_COEFF_BLUE_FLOAT_ARRAY_PART2,
	PROP_VENDOR_DISPALY_GET_RECOMM_RENDER_TARGET_SIZE_DOUBLE_ARRAY,
	PROP_VENDOR_DISPALY_GET_REAL_SCREEN_SIZE_FLOAT_ARRAY,
	PROP_VENDOR_SPEC_RESERVED_END,
} USB_PROPERTY_FUNC_typedef_t;

#define HTC_SYSPRO_HLOG_ENABLE

#ifdef HTC_SYSPRO_HLOG_ENABLE
#define htc_sys_property_emerg(fmt, ...) \
	hlog_printf(HLOG_LVL_EMERG, HLOG_TAG_USB, fmt, ##__VA_ARGS__)
#define htc_sys_property_err(fmt, ...) \
	hlog_printf(HLOG_LVL_ERR, HLOG_TAG_USB, fmt, ##__VA_ARGS__)
#define htc_sys_property_warning(fmt, ...) \
	hlog_printf(HLOG_LVL_WARNING, HLOG_TAG_USB, fmt, ##__VA_ARGS__)
#define htc_sys_property_info(fmt, ...) \
	hlog_printf(HLOG_LVL_INFO, HLOG_TAG_USB, fmt, ##__VA_ARGS__)
#define htc_sys_property_debug(fmt, ...) \
	hlog_printf(HLOG_LVL_DEBUG, HLOG_TAG_USB, fmt, ##__VA_ARGS__)
#else /* HTC_SYSPRO_HLOG_ENABLE */
#define htc_sys_property_emerg(fmt, ...) \
	printf("[SYS_P][EMR] :" fmt, ##__VA_ARGS__)
#define htc_sys_property_err(fmt, ...) \
	printf("[SYS_P][ERR] :" fmt, ##__VA_ARGS__)
#define htc_sys_property_warning(fmt, ...) \
	printf("[SYS_P][WARN]:" fmt, ##__VA_ARGS__)
#define htc_sys_property_info(fmt, ...) \
	printf("[SYS_P][INFO]:" fmt, ##__VA_ARGS__)
#define htc_sys_property_debug(fmt, ...) \
	printf("[SYS_P][DBG] :" fmt, ##__VA_ARGS__)
#endif /* HTC_SYSPRO_HLOG_ENABLE */

int32_t system_property(uint8_t *, uint8_t);
void system_property_init(void);
int set_sys_prop_serv_control(enum sys_prop_service_state);
enum sys_prop_service_state get_sys_prop_serv_control(void);

#endif /* __SYSTEM_PROPERTY_H__ */
